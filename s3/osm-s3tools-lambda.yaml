AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  LambdaName:
    Type: String
    Default: osm-s3tools-lambda
    Description: Lambda name

  LambdaRoleName:
    Type: String
    Default: osm-s3tools-lambda-role
    Description: Lambda role name

  TrustRoleName:
    Type: String
    Default: org-osm-api
    Description: Role name to assume in accounts

  MainAccountID:
    Type: String
    Default: 99999999
    Description: Lambda main account ID

Resources:
  S3ToolsLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref LambdaRoleName
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: default
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                Resource:
                  - arn:aws:s3:::*
              - Effect: Allow
                Action:
                - dynamodb:BatchGetItem,
                - dynamodb:BatchWriteItem,
                - dynamodb:DeleteItem,
                - dynamodb:GetItem,
                - dynamodb:PutItem,
                - dynamodb:Query,
                - dynamodb:Scan,
                - dynamodb:UpdateItem
                Resource:
                  - arn:aws:dynamodb:us-east-1:025517087168:table/osm_s3_account_buckets,
                  - arn:aws:dynamodb:us-east-1:025517087168:table/osm_s3_account_buckets/index/*
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub
                  - arn:aws:iam::*:role/${OrgRole}
                  - { OrgRole: !Ref TrustRoleName }

  S3ToolsLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaName
      Role: !GetAtt S3ToolsLambdaRole.Arn
      Runtime: python3.7
      Handler: lambda_function.lambda_handler
      Code:
        ZipFile: |
          import json
          def lambda_handler(event, context):
            return {
                'statusCode': 200,
                'body': json.dumps({ 'buckets': [] })
            }
